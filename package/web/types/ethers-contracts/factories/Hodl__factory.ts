/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Hodl, HodlInterface } from "../Hodl";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getReleaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReleaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "releaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610332806100206000396000f3fe6080604052600436106100745760003560e01c80633ccfd60b1161004e5780633ccfd60b1461011f57806353462d6b1461013457806370a0823114610156578063d0e30db01461018357600080fd5b80630cb7eb4c1461008857806312065fe0146100d057806334265c48146100f257600080fd5b3661008357610081610187565b005b600080fd5b34801561009457600080fd5b506100be6100a33660046102a5565b6001600160a01b031660009081526001602052604090205490565b60405190815260200160405180910390f35b3480156100dc57600080fd5b50336000908152602081905260409020546100be565b3480156100fe57600080fd5b506100be61010d3660046102a5565b60016020526000908152604090205481565b34801561012b57600080fd5b506100816101c9565b34801561014057600080fd5b50336000908152600160205260409020546100be565b34801561016257600080fd5b506100be6101713660046102a5565b60006020819052908152604090205481565b6100815b33600090815260208190526040812080543492906101a69084906102d5565b909155506101b790504260646102d5565b33600090815260016020526040902055565b33600090815260016020526040902054421161023c5760405162461bcd60e51b815260206004820152602760248201527f596f752063616e206f6e6c7920776974686472617720616674657220313030206044820152667365636f6e647360c81b60648201526084015b60405180910390fd5b33600081815260208190526040812080549082905590918280808085855af19250826102a05760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606401610233565b505050565b6000602082840312156102b757600080fd5b81356001600160a01b03811681146102ce57600080fd5b9392505050565b808201808211156102f657634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220cfc3452573f88b11398f413e089c269a95b30c6434ae16d018ecc0ca9fcd2ad064736f6c63430008100033";

type HodlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HodlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hodl__factory extends ContractFactory {
  constructor(...args: HodlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Hodl> {
    return super.deploy(overrides || {}) as Promise<Hodl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Hodl {
    return super.attach(address) as Hodl;
  }
  override connect(signer: Signer): Hodl__factory {
    return super.connect(signer) as Hodl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HodlInterface {
    return new utils.Interface(_abi) as HodlInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Hodl {
    return new Contract(address, _abi, signerOrProvider) as Hodl;
  }
}
